[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_accel_to_decel: 2500
max_z_velocity: 25
max_z_accel: 300
square_corner_velocity: 5

[mcu]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[mcu mainboard0]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_5B0036000250304235323120-if00
baud: 250000

[board_pins Mellow3D_Fly_Super_8]
#   Mellow3D Fly Super 8 (Infinity Pins), pins can be found from
#   ref: https://teamgloomy.github.io/images/fly_super8_pins.svg
#   ref: https://teamgloomy.github.io/fly_super8_pins.html
mcu: mainboard0
#   A comma separated list of micro-controllers that may use the
#   aliases. The default is to apply the aliases to the main "mcu".
aliases:
#   A comma separated list of "name=value" aliases to create for the
#   given micro-controller. For example, "EXP1_1=PE6" would create an
#   "EXP1_1" alias for the "PE6" pin. However, if "value" is enclosed
#   in "<>" then "name" is created as a reserved pin (for example,
#   "EXP1_9=<GND>" would reserve "EXP1_9"). Any number of options
#   starting with "aliases_" may be specified.

    # DRIVERS
    DRIVER0_STEP=PE2, DRIVER0_DIR=PC5, DRIVER0_ENABLE=PF11, DRIVER0_DIAG=PG12, DRIVER0_UART=PC4, DRIVER0_CS=PC4,    # HV
    DRIVER1_STEP=PE3, DRIVER1_DIR=PF13, DRIVER1_ENABLE=PF14, DRIVER1_DIAG=PG11, DRIVER1_UART=PF12, DRIVER1_CS=PF12, # HV
    DRIVER2_STEP=PE4, DRIVER2_DIR=PPG0, DRIVER2_ENABLE=PG1, DRIVER2_DIAG=PG10, DRIVER2_UART=PF15, DRIVER2_CS=PF15,  # HV
    DRIVER3_STEP=PE14, DRIVER3_DIR=PE8, DRIVER3_ENABLE=PE9, DRIVER3_DIAG=PG9, DRIVER3_UART=PE7, DRIVER3_CS=PE7,
    DRIVER4_STEP=PE15, DRIVER4_DIR=PE11, DRIVER4_ENABLE=PF2, DRIVER4_DIAG=PD7, DRIVER4_UART=PE10, DRIVER4_CS=PE10,
    DRIVER5_STEP=PE1, DRIVER5_DIR=PF0, DRIVER5_ENABLE=PC15, DRIVER5_DIAG=PD6, DRIVER5_UART=PF1, DRIVER5_CS=PF1,
    DRIVER6_STEP=PE0, DRIVER6_DIR=PG3, DRIVER6_ENABLE=PG4, DRIVER6_DIAG=PA8, DRIVER6_UART=PG2, DRIVER6_CS=PG2,
    DRIVER7_STEP=PE6, DRIVER7_DIR=PG6, DRIVER7_ENABLE=PG7, DRIVER7_DIAG=PF8, DRIVER7_UART=PG5, DRIVER7_CS=PG5,

    DRIVER_SPI_BUS=spi3,

    # INPUT/OUTPUTS (ENDSTOPS)
    IO0=PG12, IO1=PG11, IO2=PG10, IO3=PG9, IO4=PD7, IO5=PD6, IO6=PA8, IO7=PF8,

    # HEATERS
    HEATER0=PB0, HEATER1=PB1, HEATER2=PC7, HEATER3=PF7, HEATER4=PF6,
    HEATER_BED=PE5, 

    # FANS
    FAN0=PA0,

    # ADC PORTS
    ADC5=PC1,

[temperature_sensor mainboard0]
sensor_type: temperature_mcu
sensor_mcu: mainboard0

[mcu toolboard0]
canbus_uuid: d4515d96685b
canbus_interface: can0

[board_pins BigTreeTech_EBB_36_v1_1]
#   BigTreeTech EBB 36 v1.1, pins can be found from
#   ref: https://github.com/bigtreetech/EBB
#   ref: https://raw.githubusercontent.com/bigtreetech/EBB/master/EBB%20CAN%20V1.1%20(STM32G0B1)/EBB36%20CAN%20V1.1/Hardware/EBB36%20CAN%20V1.1%26V1.2-PIN.png
mcu: toolboard0
#   A comma separated list of micro-controllers that may use the
#   aliases. The default is to apply the aliases to the main "mcu".
aliases:
    # DRIVERS
    DRIVER0_STEP=PD0, DRIVER0_DIR=PD1, DRIVER0_ENABLE=PD2, DRIVER0_UART=PA15,

    # HEATERS
    HEATER0=PA2,

    # FANS
    FAN1=PA0, FAN2=PA1,

    # THERMISTORS
    THERMISTOR0=PA3,

    # PROBE
    PROBE_CONTROL=PB9, PROBE_SENSOR=PB8,

    # I2C
    I2C_SDA=PB3, I2C_SCL=PB4,

    # ADXL
    ADXL_CS=PB12, ADXL_SCLK=PB10, ADXL_MOSI=PB11, ADXL_MISO=PB2,

    # LED
    LED_PIN=PD3,

[temperature_sensor toolboard0]
sensor_type: temperature_mcu
sensor_mcu: toolboard0

[stepper_x]
step_pin: mainboard0:DRIVER0_STEP
dir_pin: mainboard0:DRIVER0_DIR
enable_pin: !mainboard0:DRIVER0_ENABLE
full_steps_per_rotation: 400
microsteps: 32
rotation_distance: 40
endstop_pin: !toolboard0:I2C_SDA
position_endstop: 0
position_min: -0.05
position_max: 326
homing_speed: 50
homing_retract_dist: 5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
# step_pulse_duration: 0.0000010 # Suggestion from Discord
step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_y]
step_pin: mainboard0:DRIVER1_STEP
dir_pin: mainboard0:DRIVER1_DIR
enable_pin: !mainboard0:DRIVER1_ENABLE
full_steps_per_rotation: 400
microsteps: 32
rotation_distance: 40
endstop_pin: !mainboard0:IO1
position_endstop: 296
homing_positive_dir: true
position_min: 0
position_max: 296
homing_speed: 50
homing_retract_dist: 5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
# step_pulse_duration: 0.0000010 # Suggestion from Discord
step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_z]
step_pin: mainboard0:DRIVER3_STEP
dir_pin: !mainboard0:DRIVER3_DIR
enable_pin: !mainboard0:DRIVER3_ENABLE
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 375
homing_retract_dist: 5.0
homing_speed: 5.0
second_homing_speed: 2.5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_z1]
step_pin: mainboard0:DRIVER4_STEP
dir_pin: !mainboard0:DRIVER4_DIR
enable_pin: !mainboard0:DRIVER4_ENABLE
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 8
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[tmc2209 stepper_x]
uart_pin: mainboard0:DRIVER0_UART
# cs_pin: mainboard0:DRIVER0_CS
# spi_bus: spi3
interpolate: false
sense_resistor: 0.110
stealthchop_threshold: 0

# run_current: 1.414
# driver_TBL: 2
# driver_TOFF: 3
# driver_HSTRT: 7
# driver_HEND: 12

run_current: 1.6
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6

[tmc2209 stepper_y]
uart_pin: mainboard0:DRIVER1_UART
# cs_pin: mainboard0:DRIVER1_CS
# spi_bus: spi3
interpolate: false
sense_resistor: 0.110
stealthchop_threshold: 0

# run_current: 1.414
# driver_TBL: 2
# driver_TOFF: 3
# driver_HSTRT: 7
# driver_HEND: 12

run_current: 1.6
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6

[tmc2209 stepper_z]
uart_pin: mainboard0:DRIVER3_UART
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 3
# driver_HEND: 3

[tmc2209 stepper_z1]
uart_pin: mainboard0:DRIVER4_UART
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 3
# driver_HEND: 3

[heater_bed]
heater_pin: mainboard0:HEATER0
sensor_pin: mainboard0:ADC5
sensor_type: Generic 3950
control: pid
pid_Kp: 38.002
pid_Ki: 1.614
pid_Kd: 223.737
min_temp: 0
max_temp: 115
max_power: 0.6

[extruder]
step_pin: toolboard0:DRIVER0_STEP
dir_pin: toolboard0:DRIVER0_DIR
enable_pin: !toolboard0:DRIVER0_ENABLE
microsteps: 64
rotation_distance: 5.529
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: toolboard0:HEATER0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: toolboard0:THERMISTOR0
pullup_resistor: 4700
control: pid
pid_Kp: 23.513
pid_Ki: 2.272
pid_Kd: 60.839
min_temp: -120
min_extrude_temp: 170
max_temp: 280
max_extrude_only_distance: 150.0
max_extrude_only_velocity: 120
max_extrude_only_accel: 800
pressure_advance_smooth_time: 0.04

[tmc2209 extruder]
uart_pin: toolboard0:DRIVER0_UART
run_current: 0.672
stealthchop_threshold: 0
interpolate: false
# driver_TBL: 1
# driver_TOFF: 3
# driver_HSTRT: 7
# driver_HEND: 8

[heater_fan hotend_fan]
pin: toolboard0:FAN1
shutdown_speed: 1.0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin: toolboard0:FAN2
#cycle_time: 0.02
#cycle_time: 0.00004 # 25 kHz
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
kick_start_time: 0.250
#off_below: 0.1
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.
#
#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.

[controller_fan mainboard_drivers]
pin: mainboard0:FAN0
stepper: stepper_x, stepper_y, stepper_z
max_power: 0.75

[adxl345]
cs_pin: toolboard0:ADXL_CS
spi_software_sclk_pin: toolboard0:ADXL_SCLK
spi_software_mosi_pin: toolboard0:ADXL_MOSI
spi_software_miso_pin: toolboard0:ADXL_MISO
axes_map: z,x,y

[resonance_tester]
accel_chip: adxl345
probe_points:
    163, 158, 20

[bed_screws]
# Direct nozzle position
screw1: 0, 0 # front left
screw2: 326, 0 # front right
screw3: 163, 295 # back middle

[screws_tilt_adjust]
# Probe offset needs to be taken into account
screw1: 32, 8
screw1_name: front left screw
screw2: 318, 8
screw2_name: front right screw
screw3: 191, 295
screw3_name: rear right screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M3

[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 89
shaper_type_y: mzv
shaper_freq_y: 47.2

[include functions/virtual_sdcard.cfg]
[include functions/display_status.cfg]
[include functions/pause_resume.cfg]

[include functions/idle_timeout.cfg]

[include functions/z_probe.cfg]
[include functions/safe_z_home.cfg]
[include functions/bed_mesh.cfg]
[include functions/z_tilt.cfg]

[include functions/exclude_objects.cfg]
[include functions/firmware_retraction.cfg]
[include functions/gcode_arcs.cfg]
[include functions/force_move.cfg]
[include functions/respond.cfg]
[include functions/save_variables.cfg]

[include macros/default.cfg]
[include macros/filament_handling.cfg]
[include macros/flexplate.cfg]
[include macros/g_codes.cfg]
[include macros/m_codes.cfg]

[include macros/timelapse.cfg]

[include shell_macros/macros.cfg]

[neopixel neo]
pin: toolboard0:LED_PIN
chain_count: 5
color_order: GRB
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0

[include macros/led_progress.cfg]

# [led_effect bed_effects]
# leds:
#     neopixel:neo (1-5)
# autostart: false
# frame_rate: 24
# heater: heater_bed
# layers:
#     heater 40 1 add (1,0,1),(0,1,1)
#     heater 70 41 add (1,0,0),(1,0,1)
#     static 0 0 top (0,0,0)

# [led_effect critical_error]
# leds:
#     neopixel:neo (1-5)
# autostart: false
# frame_rate: 24
# run_on_error: true
# layers:
#     strobe 1 1.5 add (1.0, 1.0, 1.0)
#     breathing 2 0 difference (0.95, 0.0, 0.0)
#     static 1 0 top (1.0, 0.0, 0.0)

[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_BASE
gcode:
    MAYBE_HOME
    Z_TILT_ADJUST_BASE
    G1 X0 Y0 Z10 F9000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh 80degree]
#*# version = 1
#*# points =
#*# 	0.000000, 0.046250, 0.098750, 0.131250, 0.127500, 0.070000, 0.051250
#*# 	-0.017500, 0.022500, 0.065000, 0.111250, 0.103750, 0.043750, 0.018750
#*# 	-0.042500, 0.001250, 0.056250, 0.100000, 0.085000, 0.028750, 0.008750
#*# 	-0.075000, -0.016250, 0.033750, 0.070000, 0.080000, 0.021250, 0.002500
#*# 	-0.087500, -0.047500, 0.012500, 0.065000, 0.058750, -0.001250, -0.017500
#*# 	-0.085000, -0.028750, 0.043750, 0.088750, 0.090000, 0.040000, 0.012500
#*# 	-0.080000, -0.027500, 0.041250, 0.101250, 0.101250, 0.047500, 0.030000
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 28.0
#*# max_x = 298.0
#*# min_y = 20.0
#*# max_y = 284.0
#*#
#*# [bed_mesh 60degree]
#*# version = 1
#*# points =
#*# 	0.000000, 0.016250, 0.047500, 0.057500, 0.043750, -0.020000, -0.053750
#*# 	-0.038750, -0.012500, 0.010000, 0.033750, 0.017500, -0.066250, -0.118750
#*# 	-0.067500, -0.042500, -0.006250, 0.025000, -0.003750, -0.083750, -0.122500
#*# 	-0.122500, -0.072500, -0.031250, -0.011250, -0.016250, -0.096250, -0.127500
#*# 	-0.132500, -0.106250, -0.058750, -0.021250, -0.042500, -0.125000, -0.152500
#*# 	-0.127500, -0.082500, -0.032500, -0.007500, -0.016250, -0.081250, -0.113750
#*# 	-0.113750, -0.078750, -0.032500, 0.002500, -0.012500, -0.070000, -0.096250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 28.0
#*# max_x = 298.0
#*# min_y = 20.0
#*# max_y = 284.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.000000, 0.026250, 0.061250, 0.080000, 0.070000, 0.016250, 0.003750
#*# 	  -0.020000, 0.011250, 0.033750, 0.068750, 0.063750, -0.002500, -0.023750
#*# 	  -0.032500, -0.002500, 0.031250, 0.070000, 0.047500, -0.008750, -0.026250
#*# 	  -0.062500, -0.017500, 0.021250, 0.052500, 0.052500, -0.012500, -0.028750
#*# 	  -0.067500, -0.042500, 0.010000, 0.055000, 0.038750, -0.026250, -0.043750
#*# 	  -0.065000, -0.013750, 0.042500, 0.080000, 0.081250, 0.018750, -0.008750
#*# 	  -0.048750, -0.012500, 0.045000, 0.092500, 0.083750, 0.031250, 0.011250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 28.0
#*# max_x = 298.0
#*# min_y = 20.0
#*# max_y = 284.0
