[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_accel_to_decel: 2500
square_corner_velocity: 6
max_z_velocity: 25
max_z_accel: 300

[mcu]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[mcu mainboard0]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_5B0036000250304235323120-if00
baud: 250000

[board_pins Mellow3D_Fly_Super_8]
#   Mellow3D Fly Super 8 (Infinity Pins), pins can be found from
#   ref: https://teamgloomy.github.io/images/fly_super8_pins.svg
#   ref: https://teamgloomy.github.io/fly_super8_pins.html
mcu: mainboard0
#   A comma separated list of micro-controllers that may use the
#   aliases. The default is to apply the aliases to the main "mcu".
aliases:
#   A comma separated list of "name=value" aliases to create for the
#   given micro-controller. For example, "EXP1_1=PE6" would create an
#   "EXP1_1" alias for the "PE6" pin. However, if "value" is enclosed
#   in "<>" then "name" is created as a reserved pin (for example,
#   "EXP1_9=<GND>" would reserve "EXP1_9"). Any number of options
#   starting with "aliases_" may be specified.

    # DRIVERS
    DRIVER0_STEP=PE2, DRIVER0_DIR=PC5, DRIVER0_ENABLE=PF11, DRIVER0_DIAG=PG12, DRIVER0_UART=PC4, DRIVER0_CS=PC4,    # HV
    DRIVER1_STEP=PE3, DRIVER1_DIR=PF13, DRIVER1_ENABLE=PF14, DRIVER1_DIAG=PG11, DRIVER1_UART=PF12, DRIVER1_CS=PF12, # HV
    DRIVER2_STEP=PE4, DRIVER2_DIR=PPG0, DRIVER2_ENABLE=PG1, DRIVER2_DIAG=PG10, DRIVER2_UART=PF15, DRIVER2_CS=PF15,  # HV
    DRIVER3_STEP=PE14, DRIVER3_DIR=PE8, DRIVER3_ENABLE=PE9, DRIVER3_DIAG=PG9, DRIVER3_UART=PE7, DRIVER3_CS=PE7,
    DRIVER4_STEP=PE15, DRIVER4_DIR=PE11, DRIVER4_ENABLE=PF2, DRIVER4_DIAG=PD7, DRIVER4_UART=PE10, DRIVER4_CS=PE10,
    DRIVER5_STEP=PE1, DRIVER5_DIR=PF0, DRIVER5_ENABLE=PC15, DRIVER5_DIAG=PD6, DRIVER5_UART=PF1, DRIVER5_CS=PF1,
    DRIVER6_STEP=PE0, DRIVER6_DIR=PG3, DRIVER6_ENABLE=PG4, DRIVER6_DIAG=PA8, DRIVER6_UART=PG2, DRIVER6_CS=PG2,
    DRIVER7_STEP=PE6, DRIVER7_DIR=PG6, DRIVER7_ENABLE=PG7, DRIVER7_DIAG=PF8, DRIVER7_UART=PG5, DRIVER7_CS=PG5,

    DRIVER_SPI_BUS=spi3,

    # INPUT/OUTPUTS (ENDSTOPS)
    IO0=PG12, IO1=PG11, IO2=PG10, IO3=PG9, IO4=PD7, IO5=PD6, IO6=PA8, IO7=PF8,

    # HEATERS
    HEATER0=PB0, HEATER1=PB1, HEATER2=PC7, HEATER3=PF7, HEATER4=PF6,
    HEATER_BED=PE5, 

    # FANS
    FAN0=PA0,

    # ADC PORTS
    ADC5=PC1,

[temperature_sensor mainboard0]
sensor_type: temperature_mcu
sensor_mcu: mainboard0

[mcu toolboard0]
canbus_uuid: d4515d96685b
canbus_interface: can0

[board_pins BigTreeTech_EBB_36_v1_1]
#   BigTreeTech EBB 36 v1.1, pins can be found from
#   ref: https://github.com/bigtreetech/EBB
#   ref: https://raw.githubusercontent.com/bigtreetech/EBB/master/EBB%20CAN%20V1.1%20(STM32G0B1)/EBB36%20CAN%20V1.1/Hardware/EBB36%20CAN%20V1.1%26V1.2-PIN.png
mcu: toolboard0
#   A comma separated list of micro-controllers that may use the
#   aliases. The default is to apply the aliases to the main "mcu".
aliases:
    # DRIVERS
    DRIVER0_STEP=PD0, DRIVER0_DIR=PD1, DRIVER0_ENABLE=PD2, DRIVER0_UART=PA15,

    # HEATERS
    HEATER0=PA2,

    # FANS
    FAN1=PA0, FAN2=PA1,

    # THERMISTORS
    THERMISTOR0=PA3,

    # PROBE
    PROBE_CONTROL=PB9, PROBE_SENSOR=PB8,

    # I2C
    I2C_SDA=PB3, I2C_SCL=PB4,

    # ADXL
    ADXL_CS=PB12, ADXL_SCLK=PB10, ADXL_MOSI=PB11, ADXL_MISO=PB2,

[temperature_sensor toolboard0]
sensor_type: temperature_mcu
sensor_mcu: toolboard0

[stepper_x]
step_pin: mainboard0:DRIVER0_STEP
dir_pin: mainboard0:DRIVER0_DIR
enable_pin: !mainboard0:DRIVER0_ENABLE
full_steps_per_rotation: 400
microsteps: 32
rotation_distance: 40
endstop_pin: !toolboard0:I2C_SDA
position_endstop: 0
position_min: -0.05
position_max: 326
homing_speed: 40
homing_retract_dist: 5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_y]
step_pin: mainboard0:DRIVER1_STEP
dir_pin: mainboard0:DRIVER1_DIR
enable_pin: !mainboard0:DRIVER1_ENABLE
full_steps_per_rotation: 400
microsteps: 32
rotation_distance: 40
endstop_pin: !mainboard0:IO1
position_endstop: 296
homing_positive_dir: true
position_min: 0
position_max: 296
homing_speed: 40
homing_retract_dist: 5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_z]
step_pin: mainboard0:DRIVER3_STEP
dir_pin: !mainboard0:DRIVER3_DIR
enable_pin: !mainboard0:DRIVER3_ENABLE
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 375
homing_retract_dist: 5.0
homing_speed: 5.0
second_homing_speed: 2.5
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[stepper_z1]
step_pin: mainboard0:DRIVER4_STEP
dir_pin: !mainboard0:DRIVER4_DIR
enable_pin: !mainboard0:DRIVER4_ENABLE
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 8
# step_pulse_duration: 0.0000001 # Klipper default for TMCs
step_pulse_duration: 0.0000010 # Suggestion from Discord
# step_pulse_duration: 0.0000040 # Mellow default for TMC2209
# step_pulse_duration: 0.0000020 # Klipper default for all others

[tmc2209 stepper_x]
uart_pin: mainboard0:DRIVER0_UART
# cs_pin: mainboard0:DRIVER0_CS
# spi_bus: spi3
interpolate: false
run_current: 1.414
sense_resistor: 0.110
stealthchop_threshold: 0
# run_current: 1.202
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 2
# driver_HEND: 3

[tmc2209 stepper_y]
uart_pin: mainboard0:DRIVER1_UART
# cs_pin: mainboard0:DRIVER1_CS
# spi_bus: spi3
interpolate: false
run_current: 1.414
sense_resistor: 0.110
stealthchop_threshold: 0
# run_current: 1.202
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 2
# driver_HEND: 3

[tmc2209 stepper_z]
uart_pin: mainboard0:DRIVER3_UART
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 3
# driver_HEND: 3

[tmc2209 stepper_z1]
uart_pin: mainboard0:DRIVER4_UART
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0
# driver_TBL: 0
# driver_TOFF: 3
# driver_HSTRT: 3
# driver_HEND: 3

[safe_z_home]
home_xy_position: 191, 170 # BED: 326, 316 - PROBE_OFFSET: -28, -12 = BedMaxX/2-ProbeX, BedMaxY/2-ProbeY
speed: 80.0
z_hop: 10
z_hop_speed: 15.0
move_to_previous: False

[heater_bed]
heater_pin: mainboard0:HEATER0
sensor_pin: mainboard0:ADC5
sensor_type: Generic 3950
control: pid
pid_Kp: 38.002
pid_Ki: 1.614
pid_Kd: 223.737
min_temp: 0
max_temp: 115
max_power: 0.6

[extruder]
step_pin: toolboard0:DRIVER0_STEP
dir_pin: toolboard0:DRIVER0_DIR
enable_pin: !toolboard0:DRIVER0_ENABLE
microsteps: 64
rotation_distance: 5.529
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: toolboard0:HEATER0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: toolboard0:THERMISTOR0
pullup_resistor: 4700
control: pid
pid_Kp: 23.513
pid_Ki: 2.272
pid_Kd: 60.839
min_temp: 0
min_extrude_temp: 170
max_temp: 280
max_extrude_only_distance: 150.0
max_extrude_only_velocity: 120
max_extrude_only_accel: 800
pressure_advance_smooth_time: 0.04

[tmc2209 extruder]
uart_pin: toolboard0:DRIVER0_UART
run_current: 0.672
stealthchop_threshold: 0
interpolate: false
driver_TBL: 1
driver_TOFF: 3
driver_HSTRT: 7
driver_HEND: 8

[probe]
pin: ^toolboard0:PROBE_SENSOR
x_offset: -28.0
y_offset: -12.0
#z_offset: 0
speed: 25
samples: 3
sample_retract_dist: 1
lift_speed: 25
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 5

# [bltouch]
# sensor_pin: toolboard0:PROBE_SENSOR
# #   Pin connected to the BLTouch sensor pin. Most BLTouch devices
# #   require a pullup on the sensor pin (prefix the pin name with "^").
# #   This parameter must be provided.
# control_pin: toolboard0:PROBE_CONTROL
# #   Pin connected to the BLTouch control pin. This parameter must be
# #   provided.
# pin_move_time: 0.680
# #   The amount of time (in seconds) to wait for the BLTouch pin to
# #   move up or down. The default is 0.680 seconds.
# stow_on_each_sample: True
# #   This determines if Klipper should command the pin to move up
# #   between each probe attempt when performing a multiple probe
# #   sequence. Read the directions in docs/BLTouch.md before setting
# #   this to False. The default is True.
# probe_with_touch_mode: False
# #   If this is set to True then Klipper will probe with the device in
# #   "touch_mode". The default is False (probing in "pin_down" mode).
# pin_up_reports_not_triggered: True
# #   Set if the BLTouch consistently reports the probe in a "not
# #   triggered" state after a successful "pin_up" command. This should
# #   be True for all genuine BLTouch devices. Read the directions in
# #   docs/BLTouch.md before setting this to False. The default is True.
# pin_up_touch_mode_reports_triggered: True
# #   Set if the BLTouch consistently reports a "triggered" state after
# #   the commands "pin_up" followed by "touch_mode". This should be
# #   True for all genuine BLTouch devices. Read the directions in
# #   docs/BLTouch.md before setting this to False. The default is True.
# #set_output_mode:
# #   Request a specific sensor pin output mode on the BLTouch V3.0 (and
# #   later). This setting should not be used on other types of probes.
# #   Set to "5V" to request a sensor pin output of 5 Volts (only use if
# #   the controller board needs 5V mode and is 5V tolerant on its input
# #   signal line). Set to "OD" to request the sensor pin output use
# #   open drain mode. The default is to not request an output mode.
# x_offset: -28
# #   The distance (in mm) between the probe and the nozzle along the
# #   x-axis. The default is 0.
# y_offset: -12
# #   The distance (in mm) between the probe and the nozzle along the
# #   y-axis. The default is 0.
# z_offset: 0
# #   The distance (in mm) between the bed and the nozzle when the probe
# #   triggers. This parameter must be provided.
# speed: 15.0
# #   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
# samples: 3
# #   The number of times to probe each point. The probed z-values will
# #   be averaged. The default is to probe 1 time.
# sample_retract_dist: 3.0
# #   The distance (in mm) to lift the toolhead between each sample (if
# #   sampling more than once). The default is 2mm.
# #lift_speed:
# #   Speed (in mm/s) of the Z axis when lifting the probe between
# #   samples. The default is to use the same value as the 'speed'
# #   parameter.
# samples_result: median
# #   The calculation method when sampling more than once - either
# #   "median" or "average". The default is average.
# samples_tolerance: 0.05
# #   The maximum Z distance (in mm) that a sample may differ from other
# #   samples. If this tolerance is exceeded then either an error is
# #   reported or the attempt is restarted (see
# #   samples_tolerance_retries). The default is 0.100mm.
# samples_tolerance_retries: 3
# #   The number of times to retry if a sample is found that exceeds
# #   samples_tolerance. On a retry, all current samples are discarded
# #   and the probe attempt is restarted. If a valid set of samples are
# #   not obtained in the given number of retries then an error is
# #   reported. The default is zero which causes an error to be reported
# #   on the first sample that exceeds samples_tolerance.
# #activate_gcode:
# #   A list of G-Code commands to execute prior to each probe attempt.
# #   See docs/Command_Templates.md for G-Code format. This may be
# #   useful if the probe needs to be activated in some way. Do not
# #   issue any commands here that move the toolhead (eg, G1). The
# #   default is to not run any special G-Code commands on activation.
# #deactivate_gcode:
# #   A list of G-Code commands to execute after each probe attempt
# #   completes. See docs/Command_Templates.md for G-Code format. Do not
# #   issue any commands here that move the toolhead. The default is to
# #   not run any special G-Code commands on deactivation.

[heater_fan hotend_fan]
pin: toolboard0:FAN1
shutdown_speed: 1.0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin: toolboard0:FAN2
#cycle_time: 0.02
#cycle_time: 0.00004 # 25 kHz
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
kick_start_time: 0.250
#off_below: 0.1
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.
#
#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.

[controller_fan mainboard_drivers]
pin: mainboard0:FAN0
stepper: stepper_x, stepper_y, stepper_z
max_power: 0.75
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.

[adxl345]
cs_pin: toolboard0:ADXL_CS
spi_software_sclk_pin: toolboard0:ADXL_SCLK
spi_software_mosi_pin: toolboard0:ADXL_MOSI
spi_software_miso_pin: toolboard0:ADXL_MISO
axes_map: z,x,y

[resonance_tester]
accel_chip: adxl345
probe_points:
    163, 158, 20

[virtual_sdcard]
path: ~/gcode_files
on_error_gcode:
    CANCEL_PRINT

[pause_resume]

[display_status]

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[firmware_retraction]
retract_length: 1.0
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 60
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 60
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[respond]
default_type: command
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
# default_prefix: "echo: "
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[save_variables]
filename: ~/klipper_config/svv_variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg

[z_tilt]
#   Z Spindel (left) / Z1 Spindel (right)
#   X-52,Y158        / X380,Y158
z_positions: -52, 158
             380, 158
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
#   G30 P0 X35.5 Y105 Z-99999
#   G30 P1 X214.5 Y105 Z-99999
points: 35, 172
        326, 172
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 10
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[bed_screws]
# Direct nozzle position
screw1: 0, 0 # front left
screw2: 326, 0 # front right
screw3: 163, 295 # back middle

[screws_tilt_adjust]
# Probe offset needs to be taken into account
screw1: 32, 8
screw1_name: front left screw
screw2: 318, 8
screw2_name: front right screw
screw3: 191, 304
screw3_name: rear right screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M3

[bed_mesh]
speed: 200
horizontal_move_z: 2
mesh_min: 28, 20 # Bed: 326, 296 | Probe: -28, -12
mesh_max: 298, 284
probe_count: 7
# fade_start: 1.0
# fade_end: 10.0
fade_end: 0
# fade_target: 0
mesh_pps: 2
algorithm: bicubic
bicubic_tension: .1
relative_reference_index: 0 # Mid-Point: "(probe_count * probe_count - 1) / 2"

[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 89
shaper_type_y: mzv
shaper_freq_y: 47.2

[virtual_sdcard]
path: ~/gcode_files
on_error_gcode:
  CANCEL_PRINT

[pause_resume]

[display_status]

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[include macros/default.cfg]
[include macros/filament_handling.cfg]
#[include macros/flexplate.cfg]
[include macros/g_codes.cfg]
[include macros/m_codes.cfg]
[include macros/shell_macros.cfg]
[include macros/timelapse.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.000000, 0.002500, 0.050000, 0.060000, 0.042500, -0.030000, -0.055000
#*# 	  -0.005000, 0.010000, 0.042500, 0.070000, 0.050000, -0.020000, -0.040000
#*# 	  -0.005000, 0.010000, 0.050000, 0.075000, 0.050000, -0.017500, -0.035000
#*# 	  -0.027500, -0.000000, 0.035000, 0.060000, 0.050000, -0.020000, -0.032500
#*# 	  -0.035000, -0.022500, 0.020000, 0.052500, 0.030000, -0.035000, -0.055000
#*# 	  -0.035000, -0.007500, 0.032500, 0.055000, 0.040000, -0.020000, -0.037500
#*# 	  -0.017500, 0.002500, 0.047500, 0.070000, 0.045000, -0.000000, -0.027500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 28.0
#*# max_x = 298.0
#*# min_y = 20.0
#*# max_y = 284.0
#*#
#*# [probe]
#*# z_offset = 1.150
